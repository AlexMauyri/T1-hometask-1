services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:16
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 25812581
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  producer:
    container_name: producer
    build:
      context: ./weather-producer
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_CONFIG_NAME: docker
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_TOPIC: weather
  
  consumer-1:
    container_name: consumer-1
    build:
      context: ./weather-consumer
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      SPRING_CONFIG_NAME: docker
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_TOPIC: weather
      KAFKA_GROUP_ID: weather-consumers
      DB_URL: postgres:5432
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: 25812581
    
  consumer-2:
    container_name: consumer-2
    build:
      context: ./weather-consumer
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      SPRING_CONFIG_NAME: docker
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_TOPIC: weather
      KAFKA_GROUP_ID: weather-consumers
      DB_URL: postgres:5432
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: 25812581
    
  consumer-3:
    container_name: consumer-3
    build:
      context: ./weather-consumer
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      SPRING_CONFIG_NAME: docker
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_TOPIC: weather
      KAFKA_GROUP_ID: weather-consumers
      DB_URL: postgres:5432
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: 25812581
    


volumes:
  postgres_data: